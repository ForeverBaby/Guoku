private void initView() {
    et_search = (EditText) findViewById(R.id.et_search);
    tv_tip = (TextView) findViewById(R.id.tv_tip);
    listView = (com.cwvs.microlife.MyListView) findViewById(R.id.listView);
    tv_clear = (TextView) findViewById(R.id.tv_clear);
 
    // 调整EditText左边的搜索按钮的大小
    Drawable drawable = getResources().getDrawable(R.drawable.search);
    drawable.setBounds(0, 0, 60, 60);// 第一0是距左边距离，第二0是距上边距离，60分别是长宽
    et_search.setCompoundDrawables(drawable, null, null, null);// 只放左边
}

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_main);
    // 初始化控件
    initView();
 
    // 清空搜索历史
    tv_clear.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        deleteData();
        queryData("");
      }
    });
 
    // 搜索框的键盘搜索键点击回调
    et_search.setOnKeyListener(new View.OnKeyListener() {// 输入完后按键盘上的搜索键
 
      public boolean onKey(View v, int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_DOWN) {// 修改回车键功能
          // 先隐藏键盘
          ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(
              getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
          // 按完搜索键后将当前查询的关键字保存起来,如果该关键字已经存在就不执行保存
          boolean hasData = hasData(et_search.getText().toString().trim());
          if (!hasData) {
            insertData(et_search.getText().toString().trim());
            queryData("");
          }
          // TODO 根据输入的内容模糊查询商品，并跳转到另一个界面，由你自己去实现
          Toast.makeText(MainActivity.this, "clicked!", Toast.LENGTH_SHORT).show();
 
        }
        return false;
      }
    });
 
    // 搜索框的文本变化实时监听
    et_search.addTextChangedListener(new TextWatcher() {
      @Override
      public void beforeTextChanged(CharSequence s, int start, int count, int after) {
 
      }
 
      @Override
      public void onTextChanged(CharSequence s, int start, int before, int count) {
 
      }
 
      @Override
      public void afterTextChanged(Editable s) {
        if (s.toString().trim().length() == 0) {
          tv_tip.setText("搜索历史");
        } else {
          tv_tip.setText("搜索结果");
        }
        String tempName = et_search.getText().toString();
        // 根据tempName去模糊查询数据库中有没有数据
        queryData(tempName);
 
      }
    });
 
    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
      @Override
      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        TextView textView = (TextView) view.findViewById(android.R.id.text1);
        String name = textView.getText().toString();
        et_search.setText(name);
        Toast.makeText(MainActivity.this, name, Toast.LENGTH_SHORT).show();
        // TODO 获取到item上面的文字，根据该关键字跳转到另一个页面查询，由你自己去实现
      }
    });
 
    // 插入数据，便于测试，否则第一次进入没有数据怎么测试呀？
    Date date = new Date();
    long time = date.getTime();
    insertData("Leo" + time);
 
    // 第一次进入查询所有的历史记录
    queryData("");
  }